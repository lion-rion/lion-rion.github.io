{"pageProps":{"post":{"title":"zshのチューニング","date":"2022/09/28","slug":"zsh","content":"<h1 id=\"まず\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#まず\"><span class=\"icon icon-link\"></span></a>まず</h1>\n<p>Macで標準のターミナルにてzshを使っているが…起動が半端なく遅い..!!!</p>\n<p>次のコマンドで起動までの時間を計測できるので試してみると…</p>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">i</span> <span class=\"token keyword\">in</span> <span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">seq</span> <span class=\"token number\">1</span> <span class=\"token number\">10</span><span class=\"token variable\">)</span></span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">do</span> <span class=\"token function\">time</span> <span class=\"token function\">zsh</span> -i -c <span class=\"token builtin class-name\">exit</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">done</span>\n</code></pre>\n<pre class=\"language-bash\"><code class=\"language-bash\">Saving session<span class=\"token punctuation\">..</span>.\n<span class=\"token punctuation\">..</span>.saving history<span class=\"token punctuation\">..</span>.truncating <span class=\"token function\">history</span> files<span class=\"token punctuation\">..</span>.\n<span class=\"token punctuation\">..</span>.completed.\n<span class=\"token function\">zsh</span> -i -c <span class=\"token builtin class-name\">exit</span>  <span class=\"token number\">0</span>.57s user <span class=\"token number\">0</span>.6s system <span class=\"token number\">94</span>% cpu <span class=\"token number\">1.158</span> total\n</code></pre>\n<p>合計で1.158秒と起動時間が長い…</p>\n<p>そのため今回zshrcをチューニングしてみました．</p>\n<h2 id=\"元のzshrc\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#元のzshrc\"><span class=\"icon icon-link\"></span></a>元の.zshrc</h2>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.</span>\n<span class=\"token comment\"># Initialization code that may require console input (password prompts, [y/n]</span>\n<span class=\"token comment\"># confirmations, etc.) must go above this block; everything else may go below.</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span> -r <span class=\"token string\">\"<span class=\"token variable\">${XDG_CACHE_HOME<span class=\"token operator\">:-</span>$HOME<span class=\"token operator\">/</span>.cache}</span>/p10k-instant-prompt-<span class=\"token variable\">${(<span class=\"token operator\">%</span>)<span class=\"token operator\">:-</span><span class=\"token operator\">%</span>n}</span>.zsh\"</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n  <span class=\"token builtin class-name\">source</span> <span class=\"token string\">\"<span class=\"token variable\">${XDG_CACHE_HOME<span class=\"token operator\">:-</span>$HOME<span class=\"token operator\">/</span>.cache}</span>/p10k-instant-prompt-<span class=\"token variable\">${(<span class=\"token operator\">%</span>)<span class=\"token operator\">:-</span><span class=\"token operator\">%</span>n}</span>.zsh\"</span>\n<span class=\"token keyword\">fi</span>\n<span class=\"token comment\"># コマンドのスペルを訂正</span>\nsetopt correct\n\n<span class=\"token comment\">#グローバルIPアドレス</span>\n<span class=\"token builtin class-name\">alias</span> <span class=\"token assign-left variable\">gip</span><span class=\"token operator\">=</span><span class=\"token string\">'curl globalip.me'</span>\n<span class=\"token comment\">#ローカルIPアドレス</span>\n<span class=\"token builtin class-name\">alias</span> <span class=\"token assign-left variable\">lip</span><span class=\"token operator\">=</span><span class=\"token string\">'ifconfig | grep 192 | awk '</span><span class=\"token punctuation\">\\</span>'<span class=\"token string\">'/inet/ { print $2 }'</span><span class=\"token punctuation\">\\</span>'<span class=\"token string\">''</span>\n\n<span class=\"token builtin class-name\">source</span> ~/.zsh/powerlevel10k/powerlevel10k.zsh-theme\n<span class=\"token comment\"># To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.</span>\n<span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span> <span class=\"token operator\">!</span> -f ~/.p10k.zsh <span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">||</span> <span class=\"token builtin class-name\">source</span> ~/.p10k.zsh\n\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\"><span class=\"token environment constant\">PATH</span></span><span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token environment constant\">$PATH</span>:<span class=\"token environment constant\">$HOME</span>/.composer/vendor/bin/\"</span>\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\"><span class=\"token environment constant\">PATH</span></span><span class=\"token operator\">=</span><span class=\"token environment constant\">$HOME</span>/.nodebrew/current/bin:<span class=\"token environment constant\">$PATH</span>\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\"><span class=\"token environment constant\">PATH</span></span><span class=\"token operator\">=</span><span class=\"token environment constant\">$PATH</span><span class=\"token builtin class-name\">:</span><span class=\"token environment constant\">$HOME</span>/.nodebrew/current/bin\n\n<span class=\"token comment\"># >>> conda initialize >>></span>\n<span class=\"token comment\"># !! Contents within this block are managed by 'conda init' !!</span>\n<span class=\"token assign-left variable\">__conda_setup</span><span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token variable\"><span class=\"token variable\">$(</span>'/Users/yuki/opt/anaconda3/bin/conda<span class=\"token string\">' '</span>shell.zsh<span class=\"token string\">' '</span>hook' <span class=\"token operator\"><span class=\"token file-descriptor important\">2</span>></span> /dev/null<span class=\"token variable\">)</span></span>\"</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$?</span> -eq <span class=\"token number\">0</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n    <span class=\"token builtin class-name\">eval</span> <span class=\"token string\">\"<span class=\"token variable\">$__conda_setup</span>\"</span>\n<span class=\"token keyword\">else</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> -f <span class=\"token string\">\"/Users/yuki/opt/anaconda3/etc/profile.d/conda.sh\"</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n        <span class=\"token builtin class-name\">.</span> <span class=\"token string\">\"/Users/yuki/opt/anaconda3/etc/profile.d/conda.sh\"</span>\n    <span class=\"token keyword\">else</span>\n        <span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\"><span class=\"token environment constant\">PATH</span></span><span class=\"token operator\">=</span><span class=\"token string\">\"/Users/yuki/opt/anaconda3/bin:<span class=\"token environment constant\">$PATH</span>\"</span>\n    <span class=\"token keyword\">fi</span>\n<span class=\"token keyword\">fi</span>\n<span class=\"token builtin class-name\">unset</span> __conda_setup\n<span class=\"token comment\"># &#x3C;&#x3C;&#x3C; conda initialize &#x3C;&#x3C;&#x3C;</span>\n\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">ANYENV_ROOT</span><span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token variable\">${<span class=\"token environment constant\">HOME</span>}</span>/.local/opt/anyenv\"</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> -d <span class=\"token variable\">$ANYENV_ROOT</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n  <span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\"><span class=\"token environment constant\">PATH</span></span><span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token variable\">${ANYENV_ROOT}</span>/bin:<span class=\"token variable\">${<span class=\"token environment constant\">PATH</span>}</span>\"</span>\n  <span class=\"token builtin class-name\">eval</span> <span class=\"token string\">\"<span class=\"token variable\"><span class=\"token variable\">$(</span>anyenv init -<span class=\"token variable\">)</span></span>\"</span>\n  <span class=\"token builtin class-name\">test</span> -e <span class=\"token string\">\"<span class=\"token variable\">${PYENV_ROOT}</span>/plugins/pyenv-virtualenv\"</span> <span class=\"token operator\">&#x26;&#x26;</span> <span class=\"token builtin class-name\">eval</span> <span class=\"token string\">\"<span class=\"token variable\"><span class=\"token variable\">$(</span>pyenv virtualenv-init -<span class=\"token variable\">)</span></span>\"</span>\n<span class=\"token keyword\">fi</span>\n\n<span class=\"token builtin class-name\">eval</span> <span class=\"token string\">\"<span class=\"token variable\"><span class=\"token variable\">$(</span>pyenv init -<span class=\"token variable\">)</span></span>\"</span>\n\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">PKG_CONFIG_PATH</span><span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token variable\"><span class=\"token variable\">$(</span>brew --prefix qt@5<span class=\"token variable\">)</span></span>/lib/pkgconfig:\"</span>\n\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\"><span class=\"token environment constant\">PATH</span></span><span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token variable\">${<span class=\"token environment constant\">HOME</span>}</span>/.local/bin:<span class=\"token variable\">${<span class=\"token environment constant\">PATH</span>}</span>\"</span>\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">PKG_CONFIG_PATH</span><span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token variable\">${<span class=\"token environment constant\">HOME</span>}</span>/.local/opt/protobuf/lib/pkgconfig:<span class=\"token variable\">${PKG_CONFIG_PATH}</span>\"</span>\n\n<span class=\"token builtin class-name\">source</span> /opt/homebrew/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh\n\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">CMAKE_PREFIX_PATH</span><span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token variable\">${<span class=\"token environment constant\">HOME</span>}</span>/.local/opt/protobuf;<span class=\"token variable\"><span class=\"token variable\">$(</span>brew --prefix qt@5<span class=\"token variable\">)</span></span>\"</span>\n</code></pre>\n<p>もともとはこんな感じです．</p>\n<p>p10kでカスタマイズを行って，各自パスを通していろいろ使えるようにしてるだけです．</p>\n<h1 id=\"チューニング\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#チューニング\"><span class=\"icon icon-link\"></span></a>チューニング</h1>\n<h2 id=\"パスを簡略化\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#パスを簡略化\"><span class=\"icon icon-link\"></span></a>パスを簡略化</h2>\n<p>condaを入れているのでsetupが発生するのですが，パスを簡略化できます．</p>\n<p>どこかわかりますか？</p>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># >>> conda initialize >>></span>\n<span class=\"token comment\"># !! Contents within this block are managed by 'conda init' !!</span>\n<span class=\"token assign-left variable\">__conda_setup</span><span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token variable\"><span class=\"token variable\">$(</span>'/Users/yuki/opt/anaconda3/bin/conda<span class=\"token string\">' '</span>shell.zsh<span class=\"token string\">' '</span>hook' <span class=\"token operator\"><span class=\"token file-descriptor important\">2</span>></span> /dev/null<span class=\"token variable\">)</span></span>\"</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$?</span> -eq <span class=\"token number\">0</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n    <span class=\"token builtin class-name\">eval</span> <span class=\"token string\">\"<span class=\"token variable\">$__conda_setup</span>\"</span>\n<span class=\"token keyword\">else</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> -f <span class=\"token string\">\"/Users/yuki/opt/anaconda3/etc/profile.d/conda.sh\"</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n        <span class=\"token builtin class-name\">.</span> <span class=\"token string\">\"/Users/yuki/opt/anaconda3/etc/profile.d/conda.sh\"</span>\n    <span class=\"token keyword\">else</span>\n        <span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\"><span class=\"token environment constant\">PATH</span></span><span class=\"token operator\">=</span><span class=\"token string\">\"/Users/yuki/opt/anaconda3/bin:<span class=\"token environment constant\">$PATH</span>\"</span>\n    <span class=\"token keyword\">fi</span>\n<span class=\"token keyword\">fi</span>\n<span class=\"token builtin class-name\">unset</span> __conda_setup\n<span class=\"token comment\"># &#x3C;&#x3C;&#x3C; conda initialize &#x3C;&#x3C;&#x3C;</span>\n</code></pre>\n<p><code>/Users/yuki/</code> ←ここですね．</p>\n<p>これは<code>~/</code>(チルダスラ)で簡略化できるので全部これに変更します</p>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># >>> conda initialize >>></span>\n<span class=\"token comment\"># !! Contents within this block are managed by 'conda init' !!</span>\n<span class=\"token assign-left variable\">__conda_setup</span><span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token variable\"><span class=\"token variable\">$(</span>'~/opt/anaconda3/bin/conda<span class=\"token string\">' '</span>shell.zsh<span class=\"token string\">' '</span>hook' <span class=\"token operator\"><span class=\"token file-descriptor important\">2</span>></span> /dev/null<span class=\"token variable\">)</span></span>\"</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$?</span> -eq <span class=\"token number\">0</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n    <span class=\"token builtin class-name\">eval</span> <span class=\"token string\">\"<span class=\"token variable\">$__conda_setup</span>\"</span>\n<span class=\"token keyword\">else</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> -f <span class=\"token string\">\"~/opt/anaconda3/etc/profile.d/conda.sh\"</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n        <span class=\"token builtin class-name\">.</span> <span class=\"token string\">\"~/opt/anaconda3/etc/profile.d/conda.sh\"</span>\n    <span class=\"token keyword\">else</span>\n        <span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\"><span class=\"token environment constant\">PATH</span></span><span class=\"token operator\">=</span><span class=\"token string\">\"~/opt/anaconda3/bin:<span class=\"token environment constant\">$PATH</span>\"</span>\n    <span class=\"token keyword\">fi</span>\n<span class=\"token keyword\">fi</span>\n<span class=\"token builtin class-name\">unset</span> __conda_setup\n<span class=\"token comment\"># &#x3C;&#x3C;&#x3C; conda initialize &#x3C;&#x3C;&#x3C;</span>\n</code></pre>\n<p>これだけで変わるか？と思えるかもですが，これで変わります．</p>\n<pre class=\"language-bash\"><code class=\"language-bash\">Saving session<span class=\"token punctuation\">..</span>.\n<span class=\"token punctuation\">..</span>.saving history<span class=\"token punctuation\">..</span>.truncating <span class=\"token function\">history</span> files<span class=\"token punctuation\">..</span>.\n<span class=\"token punctuation\">..</span>.completed.\n<span class=\"token function\">zsh</span> -i -c <span class=\"token builtin class-name\">exit</span>  <span class=\"token number\">0</span>.17s user <span class=\"token number\">0</span>.27s system <span class=\"token number\">94</span>% cpu <span class=\"token number\">0.44</span> total\n</code></pre>\n<p>50%カットくらいできました😊</p>\n<h2 id=\"anyenvの削除\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#anyenvの削除\"><span class=\"icon icon-link\"></span></a>Anyenvの削除</h2>\n<p>もっと大きい問題はここにありました．なんでかよくわからないですがanyenvを使うと起動時間が馬鹿遅くなります．設定方法に問題があるので後日調べていきたいと思います．</p>\n<p>とりあえず今回はこれを消します．Anyenvは使ってないので消してもヨシ</p>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">ANYENV_ROOT</span><span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token variable\">${<span class=\"token environment constant\">HOME</span>}</span>/.local/opt/anyenv\"</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> -d <span class=\"token variable\">$ANYENV_ROOT</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n  <span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\"><span class=\"token environment constant\">PATH</span></span><span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token variable\">${ANYENV_ROOT}</span>/bin:<span class=\"token variable\">${<span class=\"token environment constant\">PATH</span>}</span>\"</span>\n  <span class=\"token builtin class-name\">eval</span> <span class=\"token string\">\"<span class=\"token variable\"><span class=\"token variable\">$(</span>anyenv init -<span class=\"token variable\">)</span></span>\"</span>\n  <span class=\"token builtin class-name\">test</span> -e <span class=\"token string\">\"<span class=\"token variable\">${PYENV_ROOT}</span>/plugins/pyenv-virtualenv\"</span> <span class=\"token operator\">&#x26;&#x26;</span> <span class=\"token builtin class-name\">eval</span> <span class=\"token string\">\"<span class=\"token variable\"><span class=\"token variable\">$(</span>pyenv virtualenv-init -<span class=\"token variable\">)</span></span>\"</span>\n<span class=\"token keyword\">fi</span>\n</code></pre>\n<h2 id=\"結果\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#結果\"><span class=\"icon icon-link\"></span></a>結果</h2>\n<p>超早くなりました．1/9レベルまで落とすことができたので満足です！！</p>\n<pre class=\"language-bash\"><code class=\"language-bash\">Saving session<span class=\"token punctuation\">..</span>.\n<span class=\"token punctuation\">..</span>.saving history<span class=\"token punctuation\">..</span>.truncating <span class=\"token function\">history</span> files<span class=\"token punctuation\">..</span>.\n<span class=\"token punctuation\">..</span>.completed.\n<span class=\"token function\">zsh</span> -i -c <span class=\"token builtin class-name\">exit</span>  <span class=\"token number\">0</span>.08s user <span class=\"token number\">0</span>.07s system <span class=\"token number\">93</span>% cpu <span class=\"token number\">0.160</span> total\n</code></pre>","ogImage":{"url":"/assets/blog/dynamic-routing/20210708163942.png"},"coverImage":"/assets/blog/dynamic-routing/20210708163942.png","tags":["技術","zsh","チューニング"]}},"__N_SSG":true}